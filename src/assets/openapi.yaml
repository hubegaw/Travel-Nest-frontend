openapi: 3.0.3
info:
  title: Travel Nest - journey management API
  description: Travel Nest - journey management API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /auth/register:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
      operationId: register
      summary: register user
      responses:
        '201':
          description: register
  /auth/authenticate:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
      operationId: authenticate
      summary: authenticate user
      responses:
        '200':
          description: authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /v1/users:
    get:
      operationId: getAllUsers
      summary: Get list of all users
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: All users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /v1/users/{userId}:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      operationId: getUserById
      summary: Get user by id
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      operationId: updateUserProfile
      summary: Update user by id
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /v1/users/{email}:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      operationId: getUserByEmail
      summary: Get user by email
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
  /v1/journeys:
    get:
      operationId: getAllUserJourneys
      summary: Get list of all user's journeys
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: All user's journeys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JourneyDTO'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyDTO'
      operationId: saveJourney
      summary: save journey
      security:
        - bearerAuth: [ ]
      responses:
        '201':
          description: save journey
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyDTO'
      operationId: updateJourney
      summary: update journey
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: update journey
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      operationId: deleteJourney
      summary: Delete journey
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: delete journey
  /v1/journeys/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getJourney
      summary: Get journey
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: get journey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyDTO'
  /v1/amadeus/flights/flight-offers:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightOfferDTO'
      operationId: postFlightOffers
      summary: post flight offers
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: post flight offers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightOfferResponse'

components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
    JourneyDTO:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
        start_place:
          type: object
          items:
            $ref: '#/components/schemas/AddressDTO'
        destination:
          type: object
          items:
            $ref: '#/components/schemas/AddressDTO'
        start_date:
          type: string
        end_date:
          type: string
        places_to_visit:
          type: array
          items:
            $ref: '#/components/schemas/PlaceDTO'
    PlaceDTO:
      type: object
      properties:
        place_address:
          type: object
          items:
            $ref: '#/components/schemas/AddressDTO'
        phone_number:
          type: string
    AddressDTO:
      type: object
      properties:
        country:
          type: string
        voivodeship:
          type: string
        city:
          type: string
        zip_code:
          type: string
        street:
          type: string
        house_number:
          type: string
        apartment_number:
          type: string
    FlightOfferDTO:
      type: object
      properties:
        originLocationCode:
          type: string
        destinationLocationCode:
          type: string
        departureDate:
          type: string
        returnDate:
          type: string
        adults:
          type: integer
        children:
          type: integer
        travelClass:
          type: string
        nonStop:
          type: boolean
        currencyCode:
          type: string
        max:
          type: integer
    AuthDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
    FlightOfferResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        dictionaries:
          $ref: '#/components/schemas/Dictionary'
    Data:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        source:
          type: string
        oneWay:
          type: boolean
        lastTicketingDate:
          type: string
        numberOfBookableSeats:
          type: integer
        itineraries:
          type: array
          items:
            $ref: '#/components/schemas/Itinerary'
        price:
          $ref: '#/components/schemas/Price'
    Itinerary:
      type: object
      properties:
        duration:
          type: string
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
    Segment:
      type: object
      properties:
        id:
          type: string
        departure:
          $ref: '#/components/schemas/Departure'
        arrival:
          $ref: '#/components/schemas/Arrival'
        numberOfStops:
          type: integer
        blacklistedInEU:
          type: boolean
        carrierCode:
          type: string
    Departure:
      type: object
      properties:
        iataCode:
          type: string
        terminal:
          type: string
        at:
          type: string
    Arrival:
      type: object
      properties:
        iataCode:
          type: string
        terminal:
          type: string
        at:
          type: string
    Price:
      type: object
      properties:
        currency:
          type: string
        total:
          type: string
        base:
          type: string
        grandTotal:
          type: string
    Dictionary:
      type: object
      properties:
        carriers:
          type: object
          additionalProperties:
            type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
